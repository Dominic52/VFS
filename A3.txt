1. echo "one1" > mount/one.txt


** create: /one.txt **
** flush /one.txt **
** write: /one.txt **
** flush /one.txt **
** release /one.txt **

2. cp mount/one.txt mount/two.txt

** open: /one.txt **
** create: /two.txt **
** read: /one.txt **
** write: /two.txt **
** flush /two.txt **
** release /two.txt **
** flush /one.txt **
** release /one.txt **

3. cat mount/two.txt

** open: /two.txt **
** read: /two.txt **
** flush /two.txt **
** release /two.txt **

4. cat mount/one.txt mount/two.txt > mount/three.txt

** create: /three.txt **
** flush /three.txt **
** open: /one.txt **
** read: /one.txt **
** write: /three.txt **
** flush /one.txt **
** release /one.txt **
** open: /two.txt **
** read: /two.txt **
** write: /three.txt **
** flush /two.txt **
** release /two.txt **
** flush /three.txt **
** release /three.txt **

5. nano mount/three.txt

** create: /.three.txt.swp **
** write: /.three.txt.swp **
** flush /.three.txt.swp **
** release /.three.txt.swp **
** open: /three.txt **
** read: /three.txt **
** flush /three.txt **
** release /three.txt **
** open: /three.txt **
** flush /three.txt **
** release /three.txt **

made change with nano

** create: /.three.txt.swp **
** write: /.three.txt.swp **
** flush /.three.txt.swp **
** release /.three.txt.swp **

saving with nano

** open: /three.txt **
** truncate: /three.txt **
** write: /three.txt **
** flush /three.txt **
** release /three.txt **

If you delete all versions if a file is deleted in the mount directory:
pros - you free up the storage space
cons - you lose all chance of recovering files

If you DO NOT delete all versions on file deletion from mount:
pros - You can still recover previous versions if you wished to
cons - If you intended to never use that file again, you will still have the other versions taking up unnecessary storage space